{"version":3,"file":"static/js/746.c9917a58.chunk.js","mappings":"mNAuGA,UA3FkB,WAChB,IAAQA,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,KACR,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAEA,GAFA,MAE8BH,EAAAA,EAAAA,UAAS,KAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,YAClBC,EAAAA,EAAAA,IAAYV,EAAKW,OACdC,MAAK,SAACC,GACLR,EAASQ,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAYD,QAIlBE,EAAAA,EAAAA,YAAU,WACK,OAATpB,GACFS,MAED,IAEH,IAOMY,EAAc,SAACC,EAAIC,IACvBC,EAAAA,EAAAA,IAAYF,EAAIC,EAAWvB,EAAKW,OAC7BC,MAAK,SAACC,GACLM,EAAAA,GAAAA,QAAc,eACdV,OAEDQ,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZC,EAAAA,GAAAA,MAAY,aAGlB,OACE,8BACGb,GACC,wCAEA,gBAAKmB,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,MAAf,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACElB,QAASA,EACTmB,mBAhCW,SAACC,GAC1BA,EAAEC,iBACFpB,EAAWmB,EAAEE,OAAOC,MAAMC,kBAiCb3B,EAAM4B,OA9BJ,SAACzB,GAAD,OAAa,SAAC0B,GAAD,OAAOA,EAAEC,KAAKH,cAAcI,SAAS5B,IA8BvC6B,CAAS7B,IAAU8B,KAAI,SAACJ,GAAD,OACnC,iBAAiBR,UAAU,sBAA3B,UACGQ,EAAEK,MADL,MACe,KACb,wBAAoB,IAAhBL,EAAEV,UAAqB,UAAY,iBACvC,iBAAME,UAAU,iBAAhB,UACmB,IAAhBQ,EAAEV,WACD,SAAC,IAAD,CAASgB,MAAM,QAAf,UACE,cACEd,UAAU,kCACVe,QAAS,kBAAMnB,EAAYY,EAAEQ,IAAKR,EAAEV,iBAIxC,SAAC,IAAD,CAASgB,MAAM,UAAf,UACE,cACEd,UAAU,kCACVe,QAAS,kBAAMnB,EAAYY,EAAEQ,IAAKR,EAAEV,oBAfpCU,EAAEQ","sources":["pages/admin/blockList/BlockList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  AdminNav,\r\n  CategoryCreateForm,\r\n  FormContainer,\r\n  LocalSearch,\r\n} from '../../../components'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { Tooltip } from 'antd'\r\nimport { changeBlock, getAllUsers } from '../../../api/user'\r\n\r\nconst BlockList = () => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [users, setUsers] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  //search while filter\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const loadAlluser = () => {\r\n    getAllUsers(user.token)\r\n      .then((res) => {\r\n        setUsers(res.data)\r\n        console.log(res.data)\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      loadAlluser()\r\n    }\r\n  }, [])\r\n\r\n  const handleSearchChange = (e) => {\r\n    e.preventDefault()\r\n    setKeyword(e.target.value.toLowerCase())\r\n  }\r\n\r\n  const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword)\r\n\r\n  const handleBlock = (id, isBlocked) => {\r\n    changeBlock(id, isBlocked, user.token)\r\n      .then((res) => {\r\n        toast.success('Action Done')\r\n        loadAlluser()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        toast.error('error')\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h4>Loading...</h4>\r\n      ) : (\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-2'>\r\n              <AdminNav />\r\n            </div>\r\n            <div className='col'>\r\n              <FormContainer>\r\n                <LocalSearch\r\n                  keyword={keyword}\r\n                  handleSearchChange={handleSearchChange}\r\n                />\r\n\r\n                {users.filter(searched(keyword)).map((c) => (\r\n                  <div key={c._id} className='alert alert-success'>\r\n                    {c.email} is{' '}\r\n                    <b>{c.isBlocked === true ? 'Blocked' : 'Not Blocked'}</b>\r\n                    <span className='float-end mx-2'>\r\n                      {c.isBlocked === false ? (\r\n                        <Tooltip title='Block'>\r\n                          <i\r\n                            className='far fa-times-circle text-danger'\r\n                            onClick={() => handleBlock(c._id, c.isBlocked)}\r\n                          ></i>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip title='Unblock'>\r\n                          <i\r\n                            className='far fa-check-circle text-danger'\r\n                            onClick={() => handleBlock(c._id, c.isBlocked)}\r\n                          ></i>\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </FormContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlockList\r\n"],"names":["user","useSelector","state","useState","users","setUsers","loading","keyword","setKeyword","loadAlluser","getAllUsers","token","then","res","data","console","log","catch","err","toast","useEffect","handleBlock","id","isBlocked","changeBlock","className","handleSearchChange","e","preventDefault","target","value","toLowerCase","filter","c","name","includes","searched","map","email","title","onClick","_id"],"sourceRoot":""}