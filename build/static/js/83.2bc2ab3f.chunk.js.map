{"version":3,"file":"static/js/83.2bc2ab3f.chunk.js","mappings":"sQAoGA,UA7FuB,WACrB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,MAERG,EAAAA,EAAAA,YAAU,WACJH,GAAQA,EAAKI,QACfN,EAAS,KACTO,EAAAA,GAAAA,MAAY,oBAAqB,CAC/BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAGb,CAACb,IAEJ,IAAMc,EAAoB,mCAAG,WAAOC,GAAP,8EAC3BA,EAAEC,iBACFnB,GAAW,GACLoB,EAAS,CACbC,IAAKC,8BACLC,iBAAiB,GALQ,SAOrBC,EAAAA,EAAAA,uBACoB3B,EAAOuB,GAC9BK,MAAK,WACJ3B,EAAS,IACTE,GAAW,GACXQ,EAAAA,GAAAA,QAAc,2BAA4B,CACxCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAGbU,OAAM,SAACC,GACN3B,GAAW,GACXQ,EAAAA,GAAAA,MAAYmB,EAAMC,QAAS,CACzBnB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OA/BW,2CAAH,sDAmC1B,OACE,SAAC,KAAD,UACGjB,GACC,eAAI8B,UAAU,yBAAd,sBAEA,iCACE,4CACA,UAAC,IAAD,YACE,UAAC,UAAD,CAAYC,UAAU,QAAtB,WACE,SAAC,UAAD,WACE,iDAEF,SAAC,YAAD,CACEC,KAAK,QACLC,WAAW,EACXC,YAAY,mBACZC,MAAOrC,EACPsC,UAAQ,EACRC,SAAU,SAAClB,GAAD,OAAOpB,EAASoB,EAAEmB,OAAOH,cAIvC,SAAC,IAAD,CACEI,QAAS,SAACpB,GAAD,OAAOD,EAAqBC,IACrCa,KAAK,SACLF,UAAU,uBACVU,UAAW1C,GAASA,EAAM2C,OAAS,EAJrC","sources":["pages/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { FormContainer } from '../../components'\r\nimport { Button, Row, Form, Col } from 'react-bootstrap'\r\nimport { authen } from '../../firebase'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      navigate('/')\r\n      toast.error('Already Logged In', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n  }, [user])\r\n\r\n  const handleForgotPassword = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    const config = {\r\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n      handleCodeInApp: true,\r\n    }\r\n    await authen\r\n      .sendPasswordResetEmail(email, config)\r\n      .then(() => {\r\n        setEmail('')\r\n        setLoading(false)\r\n        toast.success('Password Reset Link Sent', {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false)\r\n        toast.error(error.message, {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      })\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      {loading ? (\r\n        <h4 className='text-white text-center'>Loading</h4>\r\n      ) : (\r\n        <>\r\n          <h1>Password Reset</h1>\r\n          <Form>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>\r\n                <strong>Email Address</strong>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                autoFocus={true}\r\n                placeholder='Enter your Email'\r\n                value={email}\r\n                required\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              onClick={(e) => handleForgotPassword(e)}\r\n              type='button'\r\n              className='mt-3 btn btn-primary'\r\n              disabled={!email || email.length < 6}\r\n            >\r\n              Click to Receive Email With Link\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </FormContainer>\r\n  )\r\n}\r\nexport default ForgotPassword\r\n"],"names":["useState","email","setEmail","loading","setLoading","navigate","useNavigate","user","useSelector","state","useEffect","token","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleForgotPassword","e","preventDefault","config","url","process","handleCodeInApp","authen","then","catch","error","message","className","controlId","type","autoFocus","placeholder","value","required","onChange","target","onClick","disabled","length"],"sourceRoot":""}