{"version":3,"file":"static/js/286.8980e200.chunk.js","mappings":"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","sources":["common/confetti.js","pages/admin/product/ProductUpdate.js"],"sourcesContent":["import confetti from 'canvas-confetti'\r\n\r\nfunction randomInRange(min, max) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport const confettishow = () => {\r\n  confetti({\r\n    angle: randomInRange(55, 125),\r\n    spread: 360,\r\n    particleCount: 1200,\r\n    origin: { y: 0.6 },\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  AdminNav,\r\n  FormContainer,\r\n  ProductUpdateForm,\r\n  FileUpload,\r\n} from '../../../components'\r\nimport { confettishow } from '../../../common/confetti'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { getProductDetails, updateProduct } from '../../../api/product'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { getCategories, getCategorySubs } from '../../../api/category'\r\nimport { Button, Col, Container, Spinner, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport Avatar from 'react-avatar'\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  subCategory: [],\r\n  quantity: '',\r\n  images: [],\r\n  brand: '',\r\n}\r\n\r\nconst ProductUpdate = () => {\r\n  const [values, setValues] = useState(initialValues)\r\n  const [subOptions, setSubOptions] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showSub, setShowSub] = useState(false)\r\n  const [imageLoader, setImageLoader] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [arrayofSubIds, setArrayofSubIds] = useState([])\r\n  const [selectedCategory, setSelectedCategory] = useState('')\r\n  const [PreviouslySubs, setPreviouslySubs] = useState([])\r\n\r\n  var list = []\r\n\r\n  if (PreviouslySubs) {\r\n    PreviouslySubs.map((p) => list.push(p._id))\r\n  }\r\n\r\n  // console.log(list)\r\n\r\n  const navigate = useNavigate()\r\n  let { slug } = useParams()\r\n\r\n  useEffect(() => {\r\n    loadAllCategories()\r\n    loadSingleProduct()\r\n  }, [])\r\n\r\n  const loadAllCategories = () => {\r\n    getCategories()\r\n      .then((res) => {\r\n        setCategories(res.data)\r\n      })\r\n      .catch((err) => {\r\n        toast.error('FETCHING CATEGORY ERROR')\r\n      })\r\n  }\r\n\r\n  const loadSingleProduct = () => {\r\n    setLoading(true)\r\n    getProductDetails(slug)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        setValues({ ...values, ...res.data })\r\n        setPreviouslySubs(res.data.subCategory)\r\n        getCategorySubs(res.data.category._id).then((resp) => {\r\n          // console.log('asdsadsa', resp.data)\r\n          setSubOptions(resp.data) //on firstLoad\r\n        })\r\n        let arr = []\r\n        res.data.subCategory.map((s) => {\r\n          arr.push(s._id)\r\n        })\r\n        setArrayofSubIds((prev) => arr)\r\n        // console.log('AR***************', arr)\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false)\r\n        // console.log(error.response.data)\r\n      })\r\n  }\r\n\r\n  // console.log('subop', subOptions)\r\n\r\n  //multiselect\r\n  const [field, setField] = useState([])\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleRemoveImage = (public_id) => {\r\n    setImageLoader(true)\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API}/deleteimage`,\r\n        { public_id },\r\n        {\r\n          headers: {\r\n            authtoken: user ? user.token : '',\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setImageLoader(false)\r\n        const { images } = values\r\n        let filteredImages = images.filter((image) => {\r\n          return image.public_id !== public_id\r\n        })\r\n        setValues({ ...values, images: filteredImages })\r\n      })\r\n      .catch((err) => {\r\n        setImageLoader(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n  const handleSubmit = (e) => {\r\n    setLoading(true)\r\n    e.preventDefault()\r\n    if (field.length == 0) {\r\n      values.subCategory = list\r\n    } else {\r\n      values.subCategory = field\r\n    }\r\n    if (selectedCategory) {\r\n      values.category = selectedCategory\r\n    } else {\r\n      values.category = values.category._id\r\n    }\r\n\r\n    updateProduct(slug, values, user.token)\r\n      .then((res) => {\r\n        setLoading(false)\r\n        confettishow()\r\n        toast.success(`${res.data.title} is Updated`)\r\n        navigate(-1)\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.err)\r\n      })\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    // console.log(e.target.value)\r\n    setValues({ ...values, subCategory: [] })\r\n\r\n    setSelectedCategory(e.target.value)\r\n\r\n    if (e.target.value !== 'Please Select') {\r\n      setShowSub(true)\r\n      getCategorySubs(e.target.value)\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          setSubOptions(res.data)\r\n        })\r\n        .catch((err) => {\r\n          console.log('ERROR IN FETCHING CATEGORY REFRESH')\r\n        })\r\n    }\r\n\r\n    if (values.category._id === e.target.value) {\r\n      loadSingleProduct()\r\n      toast.error('Same Category Choosed')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3 className='text-white text-center'>Loading</h3>\r\n      ) : (\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-2'>\r\n              <AdminNav />\r\n            </div>\r\n            <div className='col'>\r\n              <Container>\r\n                <Row className='d-flex justify-content-between'>\r\n                  {imageLoader ? (\r\n                    <Spinner animation='border' variant='danger' />\r\n                  ) : (\r\n                    <>\r\n                      {values.images &&\r\n                        values.images.map((image) => (\r\n                          <Col\r\n                            className='mb-3'\r\n                            sm={12}\r\n                            md={6}\r\n                            lg={4}\r\n                            xl={3}\r\n                            key={image.public_id}\r\n                          >\r\n                            <div\r\n                              className='item'\r\n                              style={{\r\n                                position: 'relative',\r\n                                paddingTop: '20px',\r\n                                display: 'inline-block',\r\n                              }}\r\n                            >\r\n                              <span\r\n                                className='notify-badge'\r\n                                style={{\r\n                                  position: 'absolute',\r\n                                  right: '-20px',\r\n                                  top: '10px',\r\n                                  background: 'red',\r\n                                  textAlign: 'center',\r\n                                  borderRadius: '30px',\r\n                                  color: 'white',\r\n                                  padding: '5px 10px',\r\n                                  fontSize: '20px',\r\n                                  cursor: 'pointer',\r\n                                }}\r\n                                onClick={() =>\r\n                                  handleRemoveImage(image.public_id)\r\n                                }\r\n                              >\r\n                                X\r\n                              </span>\r\n                              <Avatar round={true} src={image.url} />\r\n                            </div>\r\n                          </Col>\r\n                        ))}\r\n                    </>\r\n                  )}\r\n                </Row>\r\n              </Container>\r\n              <FormContainer>\r\n                <h2 className='text-center' style={{ color: 'white' }}>\r\n                  PRODUCT UPDATE\r\n                </h2>\r\n                {/* {JSON.stringify(values)} */}\r\n                <br />\r\n                <FileUpload\r\n                  values={values}\r\n                  setValues={setValues}\r\n                  setImageLoader={setImageLoader}\r\n                />{' '}\r\n                <br />\r\n                <ProductUpdateForm\r\n                  handleSubmit={handleSubmit}\r\n                  handleChange={handleChange}\r\n                  setValues={setValues}\r\n                  values={values}\r\n                  handleCategoryChange={handleCategoryChange}\r\n                  subOptions={subOptions}\r\n                  showSub={showSub}\r\n                  setField={setField}\r\n                  field={field}\r\n                  categories={categories}\r\n                  arrayofSubIds={arrayofSubIds}\r\n                  setArrayofSubIds={setArrayofSubIds}\r\n                  selectedCategory={selectedCategory}\r\n                />\r\n              </FormContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductUpdate\r\n"],"names":["confettishow","min","max","confetti","angle","Math","ceil","floor","random","spread","particleCount","origin","y","initialValues","title","description","price","category","subCategory","quantity","images","brand","useState","values","setValues","subOptions","setSubOptions","loading","setLoading","showSub","setShowSub","imageLoader","setImageLoader","categories","setCategories","arrayofSubIds","setArrayofSubIds","selectedCategory","setSelectedCategory","PreviouslySubs","setPreviouslySubs","list","map","p","push","_id","navigate","useNavigate","slug","useParams","useEffect","loadAllCategories","loadSingleProduct","getCategories","then","res","data","catch","err","toast","getProductDetails","getCategorySubs","resp","arr","s","prev","error","field","setField","user","useSelector","state","className","animation","variant","image","sm","md","lg","xl","style","position","paddingTop","display","right","top","background","textAlign","borderRadius","color","padding","fontSize","cursor","onClick","public_id","axios","process","headers","authtoken","token","filteredImages","filter","console","log","round","src","url","handleSubmit","e","preventDefault","length","updateProduct","response","handleChange","target","name","value","handleCategoryChange"],"sourceRoot":""}