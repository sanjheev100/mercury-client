{"version":3,"file":"static/js/975.d84cf7c7.chunk.js","mappings":"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","sources":["api/contactus.js","pages/ContactUs.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const createContact = async (payload) => {\r\n  return await axios.post(`${process.env.REACT_APP_API}/postContact`, payload)\r\n}\r\n\r\nexport const deleteContactForm = async (id, authtoken) => {\r\n  return await axios.delete(\r\n    `${process.env.REACT_APP_API}/removeContact/${id}`,\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  )\r\n}\r\n\r\nexport const getContactForms = async (authtoken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/getContacts`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  })\r\n}\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { FormContainer } from '../components'\r\nimport { Form, Button, Spinner } from 'react-bootstrap'\r\nimport { createContact } from '../api/contactus'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ContactUs = () => {\r\n  const [buttonloading, setButtonLoading] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    let payload = {\r\n      name,\r\n      email,\r\n      phone,\r\n      content,\r\n    }\r\n    if (!name || !email || !phone || !content) {\r\n      return toast.error('All are required Fields')\r\n    }\r\n\r\n    if (!phoneRegex.test(phone)) {\r\n      return toast.error('Enter a Valid Phone Number wihtout country code')\r\n    }\r\n\r\n    setButtonLoading(true)\r\n    createContact(payload)\r\n      .then((res) => {\r\n        toast.success(\r\n          'Your request has been received, we will contact you shortly'\r\n        )\r\n        setButtonLoading(false)\r\n\r\n        setName('')\r\n        setEmail('')\r\n        setPhone('')\r\n        setContent('')\r\n        navigate('/')\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err)\r\n        setButtonLoading(false)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>\r\n              <strong style={{ color: 'white' }}>Name</strong>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              autoFocus={true}\r\n              required={true}\r\n              placeholder='name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>\r\n              <strong style={{ color: 'white' }}>Email</strong>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              autoFocus={true}\r\n              required={true}\r\n              placeholder='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group controlId='phone'>\r\n            <Form.Label>\r\n              <strong style={{ color: 'white' }}>Phone</strong>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='Number'\r\n              autoFocus={true}\r\n              required={true}\r\n              placeholder='Phone'\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group controlId='content'>\r\n            <Form.Label>\r\n              <strong style={{ color: 'white' }}>Content</strong>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as='textarea'\r\n              required={true}\r\n              placeholder='Type Your Query'\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              rows={3}\r\n            />\r\n          </Form.Group>\r\n\r\n          {buttonloading ? (\r\n            <Button\r\n              variant='primary'\r\n              className='btn-sm btn-danger mt-3'\r\n              disabled\r\n            >\r\n              <Spinner\r\n                as='span'\r\n                animation='grow'\r\n                size='sm'\r\n                role='status'\r\n                aria-hidden='true'\r\n              />\r\n              {'  '}\r\n              Loading...\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type='submit'\r\n              disabled={buttonloading || !name || !content || !email}\r\n              className='btn-raised mt-3'\r\n              variant='primary'\r\n            >\r\n              Create\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n"],"names":["createContact","payload","axios","process","deleteContactForm","id","authtoken","headers","getContactForms","useState","buttonloading","setButtonLoading","name","setName","email","setEmail","phone","setPhone","content","setContent","navigate","useNavigate","phoneRegex","onSubmit","e","preventDefault","test","then","res","toast","catch","err","controlId","style","color","type","autoFocus","required","placeholder","value","onChange","target","as","rows","variant","className","disabled","animation","size","role"],"sourceRoot":""}