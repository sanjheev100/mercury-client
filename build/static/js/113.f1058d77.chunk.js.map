{"version":3,"file":"static/js/113.f1058d77.chunk.js","mappings":"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","sources":["common/confetti.js","pages/admin/product/ProductCreate.js"],"sourcesContent":["import confetti from 'canvas-confetti'\r\n\r\nfunction randomInRange(min, max) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport const confettishow = () => {\r\n  confetti({\r\n    angle: randomInRange(55, 125),\r\n    spread: 360,\r\n    particleCount: 1200,\r\n    origin: { y: 0.6 },\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  AdminNav,\r\n  FormContainer,\r\n  ProductCreateForm,\r\n  FileUpload,\r\n} from '../../../components'\r\nimport { confettishow } from '../../../common/confetti'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { createProduct } from '../../../api/product'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getCategories, getCategorySubs } from '../../../api/category'\r\nimport { Button, Col, Container, Spinner, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport Avatar from 'react-avatar'\r\n\r\nconst initialValues = {\r\n  title: 'Ninja',\r\n  description: 'asdsd',\r\n  price: '123',\r\n  categories: [],\r\n  category: '',\r\n  subCategory: [],\r\n  quantity: '123',\r\n  images: [],\r\n  brand: 'asfdsa',\r\n}\r\n\r\nconst ProductCreate = () => {\r\n  const [values, setValues] = useState(initialValues)\r\n  const [subOptions, setSubOptions] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showSub, setShowSub] = useState(false)\r\n  const [imageLoader, setImageLoader] = useState(false)\r\n\r\n  //multiselect\r\n  const [field, setField] = useState([])\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    loadAllCategories()\r\n  }, [])\r\n\r\n  const loadAllCategories = () => {\r\n    getCategories()\r\n      .then((res) => {\r\n        setValues({ ...values, categories: res.data })\r\n      })\r\n      .catch((err) => {\r\n        toast.error('FETCHING CATEGORY ERROR')\r\n      })\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault()\r\n    setValues({ ...values, subCategory: [], category: e.target.value })\r\n    if (e.target.value !== 'Please Select') {\r\n      setShowSub(true)\r\n      getCategorySubs(e.target.value)\r\n        .then((res) => {\r\n          console.log(res.data)\r\n          setSubOptions(res.data)\r\n        })\r\n        .catch((err) => {\r\n          console.log('ERROR IN FETCHING CATEGORY REFRESH')\r\n        })\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    values.subCategory = field\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        toast.success(`${res.data.title} is Created`, {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n        setLoading(false)\r\n        window.alert(`${res.data.title} is Created`)\r\n        window.location.reload()\r\n        confettishow()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setLoading(false)\r\n        toast.error(err.response.data.err, {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleRemoveImage = (public_id) => {\r\n    setImageLoader(true)\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API}/deleteimage`,\r\n        { public_id },\r\n        {\r\n          headers: {\r\n            authtoken: user ? user.token : '',\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setImageLoader(false)\r\n        const { images } = values\r\n        let filteredImages = images.filter((image) => {\r\n          return image.public_id !== public_id\r\n        })\r\n        setValues({ ...values, images: filteredImages })\r\n      })\r\n      .catch((err) => {\r\n        setImageLoader(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading</h3>\r\n      ) : (\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-2'>\r\n              <AdminNav />\r\n            </div>\r\n            <div className='col'>\r\n              <Container>\r\n                <Row className='d-flex justify-content-between'>\r\n                  {imageLoader ? (\r\n                    <Spinner animation='border' variant='danger' />\r\n                  ) : (\r\n                    <>\r\n                      {values.images &&\r\n                        values.images.map((image) => (\r\n                          <Col\r\n                            className='mb-3'\r\n                            sm={12}\r\n                            md={6}\r\n                            lg={4}\r\n                            xl={3}\r\n                            key={image.public_id}\r\n                          >\r\n                            <div\r\n                              className='item'\r\n                              style={{\r\n                                position: 'relative',\r\n                                paddingTop: '20px',\r\n                                display: 'inline-block',\r\n                              }}\r\n                            >\r\n                              <span\r\n                                className='notify-badge'\r\n                                style={{\r\n                                  position: 'absolute',\r\n                                  right: '-20px',\r\n                                  top: '10px',\r\n                                  background: 'red',\r\n                                  textAlign: 'center',\r\n                                  borderRadius: '30px',\r\n                                  color: 'white',\r\n                                  padding: '5px 10px',\r\n                                  fontSize: '20px',\r\n                                  cursor: 'pointer',\r\n                                }}\r\n                                onClick={() =>\r\n                                  handleRemoveImage(image.public_id)\r\n                                }\r\n                              >\r\n                                X\r\n                              </span>\r\n                              <Avatar round={true} src={image.url} />\r\n                            </div>\r\n                          </Col>\r\n                        ))}\r\n                    </>\r\n                  )}\r\n                </Row>\r\n              </Container>\r\n              <FormContainer>\r\n                <h2 className='text-center' style={{ color: 'white' }}>\r\n                  PRODUCT CREATE\r\n                </h2>\r\n                <br />\r\n                <FileUpload\r\n                  values={values}\r\n                  setValues={setValues}\r\n                  setImageLoader={setImageLoader}\r\n                />{' '}\r\n                <br />\r\n                <ProductCreateForm\r\n                  values={values}\r\n                  submitHandler={submitHandler}\r\n                  handleChange={handleChange}\r\n                  handleCategoryChange={handleCategoryChange}\r\n                  subOptions={subOptions}\r\n                  showSub={showSub}\r\n                  setValues={setValues}\r\n                  setField={setField}\r\n                  field={field}\r\n                />\r\n              </FormContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCreate\r\n"],"names":["confettishow","min","max","confetti","angle","Math","ceil","floor","random","spread","particleCount","origin","y","initialValues","title","description","price","categories","category","subCategory","quantity","images","brand","useState","values","setValues","subOptions","setSubOptions","loading","setLoading","showSub","setShowSub","imageLoader","setImageLoader","field","setField","user","useSelector","state","useNavigate","useEffect","loadAllCategories","getCategories","then","res","data","catch","err","toast","className","animation","variant","map","image","sm","md","lg","xl","style","position","paddingTop","display","right","top","background","textAlign","borderRadius","color","padding","fontSize","cursor","onClick","public_id","axios","process","headers","authtoken","token","filteredImages","filter","console","log","round","src","url","submitHandler","e","preventDefault","createProduct","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","window","alert","location","reload","response","handleChange","target","name","value","handleCategoryChange","getCategorySubs"],"sourceRoot":""}