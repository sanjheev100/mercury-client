{"version":3,"file":"static/js/686.0dcd3328.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/OverlayTrigger.js","../node_modules/react-bootstrap/esm/Tooltip.js","../node_modules/react-bootstrap/esm/helpers.js"],"sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset();\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset() {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return Popover.POPPER_OFFSET;\n        }\n\n        return [0, 0];\n      }\n    }\n  }), [popoverClass]);\n  return [overlayRef, [offset]];\n}","import contains from 'dom-helpers/contains';\nimport * as React from 'react';\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport warning from 'warning';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Overlay from './Overlay';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction normalizeDelay(delay) {\n  return delay && typeof delay === 'object' ? delay : {\n    show: delay,\n    hide: delay\n  };\n} // Simple implementation of mouseEnter and mouseLeave.\n// React's built version is broken: https://github.com/facebook/react/issues/4251\n// for cases when the trigger is disabled and mouseOut/Over can cause flicker\n// moving from one child element to another.\n\n\nfunction handleMouseOverOut( // eslint-disable-next-line @typescript-eslint/no-shadow\nhandler, args, relatedNative) {\n  const [e] = args;\n  const target = e.currentTarget;\n  const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n  if ((!related || related !== target) && !contains(target, related)) {\n    handler(...args);\n  }\n}\n\nconst defaultProps = {\n  defaultShow: false,\n  trigger: ['hover', 'focus']\n};\n\nfunction OverlayTrigger({\n  trigger,\n  overlay,\n  children,\n  popperConfig = {},\n  show: propsShow,\n  defaultShow = false,\n  onToggle,\n  delay: propsDelay,\n  placement,\n  flip = placement && placement.indexOf('auto') !== -1,\n  ...props\n}) {\n  const triggerNodeRef = useRef(null);\n  const mergedRef = useMergedRefs(triggerNodeRef, children.ref);\n  const timeout = useTimeout();\n  const hoverStateRef = useRef('');\n  const [show, setShow] = useUncontrolledProp(propsShow, defaultShow, onToggle);\n  const delay = normalizeDelay(propsDelay);\n  const {\n    onFocus,\n    onBlur,\n    onClick\n  } = typeof children !== 'function' ? React.Children.only(children).props : {};\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const handleShow = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'show';\n\n    if (!delay.show) {\n      setShow(true);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'show') setShow(true);\n    }, delay.show);\n  }, [delay.show, setShow, timeout]);\n  const handleHide = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'hide';\n\n    if (!delay.hide) {\n      setShow(false);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'hide') setShow(false);\n    }, delay.hide);\n  }, [delay.hide, setShow, timeout]);\n  const handleFocus = useCallback((...args) => {\n    handleShow();\n    onFocus == null ? void 0 : onFocus(...args);\n  }, [handleShow, onFocus]);\n  const handleBlur = useCallback((...args) => {\n    handleHide();\n    onBlur == null ? void 0 : onBlur(...args);\n  }, [handleHide, onBlur]);\n  const handleClick = useCallback((...args) => {\n    setShow(!show);\n    onClick == null ? void 0 : onClick(...args);\n  }, [onClick, setShow, show]);\n  const handleMouseOver = useCallback((...args) => {\n    handleMouseOverOut(handleShow, args, 'fromElement');\n  }, [handleShow]);\n  const handleMouseOut = useCallback((...args) => {\n    handleMouseOverOut(handleHide, args, 'toElement');\n  }, [handleHide]);\n  const triggers = trigger == null ? [] : [].concat(trigger);\n  const triggerProps = {\n    ref: attachRef\n  };\n\n  if (triggers.indexOf('click') !== -1) {\n    triggerProps.onClick = handleClick;\n  }\n\n  if (triggers.indexOf('focus') !== -1) {\n    triggerProps.onFocus = handleFocus;\n    triggerProps.onBlur = handleBlur;\n  }\n\n  if (triggers.indexOf('hover') !== -1) {\n    process.env.NODE_ENV !== \"production\" ? warning(triggers.length > 1, '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the visibility of the overlay to just mouse users. Consider also including the `\"focus\"` trigger so that touch and keyboard only users can see the overlay as well.') : void 0;\n    triggerProps.onMouseOver = handleMouseOver;\n    triggerProps.onMouseOut = handleMouseOut;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [typeof children === 'function' ? children(triggerProps) : /*#__PURE__*/cloneElement(children, triggerProps), /*#__PURE__*/_jsx(Overlay, { ...props,\n      show: show,\n      onHide: handleHide,\n      flip: flip,\n      placement: placement,\n      popperConfig: popperConfig,\n      target: triggerNodeRef.current,\n      children: overlay\n    })]\n  });\n}\n\nOverlayTrigger.defaultProps = defaultProps;\nexport default OverlayTrigger;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  popper: _,\n  show: _2,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}"],"names":["Overlay","React","props","outerRef","flip","offset","placement","containerPadding","popperConfig","Transition","transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","useWaitForDOMRef","target","useState","show","exited","setExited","popper","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","useRootClose","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","child","children","Object","assign","attributes","style","styles","ref","arrowProps","arrow","onExit","onExiting","onEnter","onEntering","onEntered","_jsx","in","appear","onExited","ReactDOM","displayName","createWithBsPrefix","Popover","bsPrefix","className","body","decoratedBsPrefix","useBootstrapPrefix","isRTL","useIsRTL","split","primaryPlacement","bsDirection","getOverlayDirection","_jsxs","role","classNames","PopoverBody","defaultProps","Header","PopoverHeader","Body","POPPER_OFFSET","Fade","overlay","outerProps","popperRef","useRef","overlayRef","popoverClass","undefined","useMemo","name","options","current","hasClass","useOverlayOffset","modifiers","actualTransition","BaseOverlay","concat","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","r","safeFindDOMNode","wrapRefs","updatedPlacement","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","handleMouseOverOut","handler","args","relatedNative","e","currentTarget","related","relatedTarget","nativeEvent","contains","OverlayTrigger","trigger","propsShow","defaultShow","onToggle","propsDelay","delay","indexOf","triggerNodeRef","timeout","useTimeout","hoverStateRef","useUncontrolledProp","setShow","normalizeDelay","onFocus","onBlur","onClick","handleShow","useCallback","clear","set","handleHide","handleFocus","handleBlur","handleClick","handleMouseOver","handleMouseOut","triggers","triggerProps","onMouseOver","onMouseOut","_Fragment","cloneElement","Tooltip"],"sourceRoot":""}