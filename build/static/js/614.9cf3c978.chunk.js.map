{"version":3,"file":"static/js/614.9cf3c978.chunk.js","mappings":"wMA2BA,UAtBmB,WACjB,IAAQA,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,KAER,GAAoBG,EAAAA,EAAAA,WAAS,GAA7B,eAAOC,EAAP,KAAWC,EAAX,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAEJN,GAAQA,EAAKO,QACfC,EAAAA,EAAAA,IAAkBR,EAAKO,OACpBE,MAAK,SAACC,GAELL,GAAM,MAEPM,OAAM,SAACC,GACNC,QAAQC,IAAI,cAAeF,QAGhC,CAACZ,IAEGI,GAAK,SAAC,KAAD,KAAa,SAAC,IAAD,M,iFCD3B,IApB0B,WACxB,OAA0BD,EAAAA,EAAAA,UAAS,GAAnC,eAAOY,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAZ,EAAAA,EAAAA,YAAU,WACR,IAAMa,EAAWC,aAAY,WAC3BJ,GAAS,SAACK,GAAD,QAAoBA,OAC5B,KAGH,OADU,IAAVN,GAAeE,EAAS,KACjB,kBAAMK,cAAcH,MAC1B,CAACJ,EAAOE,KAET,SAAC,IAAD,CAAWM,UAAU,kBAArB,UACE,+CAAuBR,EAAvB,kB,4ICXAS,EAAyBC,EAAAA,YAAiB,WAO7CC,GAAQ,IANTC,EAMS,EANTA,SACAC,EAKS,EALTA,MAKS,IAHTC,GAAIC,OAGK,MAHO,MAGP,EAFTP,EAES,EAFTA,UACGQ,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,aACtCO,EAA0B,kBAAVN,EAAP,WAAgCA,GAAU,SACzD,OAAoBO,EAAAA,EAAAA,KAAKL,GAAD,QAAC,QACvBJ,IAAKA,GACFK,GAFmB,IAGtBR,UAAWa,GAAAA,CAAWb,EAAWK,EAAQ,GAAH,OAAMI,GAAN,OAAeE,GAAWF,SAGpER,EAAUa,YAAc,YACxBb,EAAUc,aApBW,CACnBV,OAAO,GAoBT","sources":["components/Routes/AdminRoute.js","components/Routes/LoadingToReDirect.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToReDirect from './LoadingToReDirect'\r\nimport { currentAdminCheck } from '../../api/auth'\r\nconst AdminRoute = () => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const [ok, setOk] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // console.log(user)\r\n    if (user && user.token) {\r\n      currentAdminCheck(user.token)\r\n        .then((res) => {\r\n          //   console.log('CURRENT ADMIN RES', res)\r\n          setOk(true)\r\n        })\r\n        .catch((error) => {\r\n          console.log('ADMIN ROUTE', error)\r\n        })\r\n    }\r\n  }, [user])\r\n\r\n  return ok ? <Outlet /> : <LoadingToReDirect />\r\n}\r\n\r\nexport default AdminRoute\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst LoadingToReDirect = () => {\r\n  const [count, setCount] = useState(5)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount)\r\n    }, 1000)\r\n\r\n    count === 0 && navigate('/')\r\n    return () => clearInterval(interval)\r\n  }, [count, navigate])\r\n  return (\r\n    <Container className='p-5 text-center'>\r\n      <p>Redirecting You in {count} seconds</p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoadingToReDirect\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["user","useSelector","state","useState","ok","setOk","useEffect","token","currentAdminCheck","then","res","catch","error","console","log","count","setCount","navigate","useNavigate","interval","setInterval","currentCount","clearInterval","className","Container","React","ref","bsPrefix","fluid","as","Component","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps"],"sourceRoot":""}