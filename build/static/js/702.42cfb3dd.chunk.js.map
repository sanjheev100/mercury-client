{"version":3,"file":"static/js/702.42cfb3dd.chunk.js","mappings":"8OAEaA,EAAa,mCAAG,WAAOC,GAAP,iFACdC,IAAAA,KAAA,UAAcC,4BAAd,gBAAuDF,GADzC,mFAAH,sDAIbG,EAAiB,mCAAG,WAAOC,EAAIC,GAAX,iFAClBJ,IAAAA,OAAA,UACRC,4BADQ,0BACmCE,GAC9C,CACEE,QAAS,CACPD,UAAAA,KALyB,mFAAH,wDAWjBE,EAAe,mCAAG,WAAOF,GAAP,iFAChBJ,IAAAA,IAAA,UAAaC,4BAAb,gBAAsD,CACjEI,QAAS,CACPD,UAAAA,KAHyB,mFAAH,uD,mIC0F5B,UApGuB,WACrB,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEQC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,MAERG,EAAAA,EAAAA,YAAU,WACK,OAATH,GACFI,MAED,IAEH,IAAMA,EAAiB,YACrBR,EAAAA,EAAAA,IAAgBI,EAAKK,OAAOC,MAAK,SAACC,GAChCR,EAAYQ,EAAIC,UAsEpB,OACE,gBAAKC,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,SAAC,KAAD,OAEF,iBAAKA,UAAU,MAAf,WACE,eAAIA,UAAU,2BAAd,SACGX,EAASY,OAAS,kBAAoB,mBA1C/CZ,EAASa,KAAI,SAACC,EAASC,GAAV,OACX,iBAAaJ,UAAU,eAAvB,WACE,+BACE,0BACE,0BACE,6BACE,oCADF,KACoBG,EAAQE,OACpB,IACP,MAAO,KACR,6BACE,wCADF,MACyBF,EAAQG,QAEhC,OACD,6BACE,iCADF,MACkBH,EAAQI,SAEzB,OACD,2BACE,SAAC,IAAD,CAASC,MAAO,SAAUC,UAAU,SAApC,UACE,kBACET,UAAU,UACVU,QAAS,kBArDL1B,EAqDwBmB,EAAQE,SApDvCM,OAAOC,QAAQ,gCAE1B7B,EAAAA,EAAAA,IAAkBC,EAAIO,EAAKK,OACxBC,MAAK,SAACC,GACLe,EAAAA,GAAAA,QAAc,wBACdlB,OAEDmB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OATC,IAAC/B,GAmDN,WAIE,cAAGgB,UAAU,sBAJf,yBApCd,mBAAOA,UAAU,uBAAjB,WACE,kBAAOA,UAAU,cAAjB,UACE,yBACE,eAAIkB,MAAM,MAAV,0BAGJ,2BACG7B,EAASa,KAAI,SAACiB,EAAGf,GAAJ,OACZ,yBACE,wBAAKe,EAAEC,WADAhB,aAUHA","sources":["api/contactus.js","pages/admin/AdminContactus.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const createContact = async (payload) => {\r\n  return await axios.post(`${process.env.REACT_APP_API}/postContact`, payload)\r\n}\r\n\r\nexport const deleteContactForm = async (id, authtoken) => {\r\n  return await axios.delete(\r\n    `${process.env.REACT_APP_API}/removeContact/${id}`,\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  )\r\n}\r\n\r\nexport const getContactForms = async (authtoken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/getContacts`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getContactForms, deleteContactForm } from '../../api/contactus'\r\nimport { useSelector } from 'react-redux'\r\nimport { AdminNav } from '../../components'\r\nimport { Tooltip } from 'antd'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst AdminContactus = () => {\r\n  const [contacts, setContacts] = useState([])\r\n\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      loadAllContact()\r\n    }\r\n  }, [])\r\n\r\n  const loadAllContact = () => {\r\n    getContactForms(user.token).then((res) => {\r\n      setContacts(res.data)\r\n    })\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    let answer = window.confirm('are you sure wanna delete?')\r\n    if (answer) {\r\n      deleteContactForm(id, user.token)\r\n        .then((res) => {\r\n          toast.success('SuccessFully Removed')\r\n          loadAllContact()\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const showContactTable = (contact) => (\r\n    <table className='table table-bordered'>\r\n      <thead className='thead-light'>\r\n        <tr>\r\n          <th scope='col'>Content</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {contacts.map((c, i) => (\r\n          <tr key={i}>\r\n            <td>{c.content}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n\r\n  const showEachRequest = () =>\r\n    contacts.map((contact, i) => (\r\n      <div key={i} className='m-5 p-3 card'>\r\n        <>\r\n          <div>\r\n            <p>\r\n              <span>\r\n                <b>Form Id </b>: {contact._id}\r\n              </span>{' '}\r\n              {' / '}{' '}\r\n              <span>\r\n                <b>Submitted By</b> : {contact.name}\r\n              </span>\r\n              {' / '}\r\n              <span>\r\n                <b>Phone</b> : {contact.phone}\r\n              </span>\r\n              {' / '}\r\n              <span>\r\n                <Tooltip title={'delete'} placement='bottom'>\r\n                  <span\r\n                    className='pointer'\r\n                    onClick={() => handleDelete(contact._id)}\r\n                  >\r\n                    <i className='far fa-trash-alt '></i> Delete\r\n                  </span>\r\n                </Tooltip>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </>\r\n        {showContactTable(contact)}\r\n      </div>\r\n    ))\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          <h4 className='text-center mytext-white'>\r\n            {contacts.length ? 'Contact Request' : 'No Request yet'}\r\n          </h4>\r\n          {showEachRequest()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminContactus\r\n"],"names":["createContact","payload","axios","process","deleteContactForm","id","authtoken","headers","getContactForms","useState","contacts","setContacts","user","useSelector","state","useEffect","loadAllContact","token","then","res","data","className","length","map","contact","i","_id","name","phone","title","placement","onClick","window","confirm","toast","catch","err","console","log","scope","c","content"],"sourceRoot":""}