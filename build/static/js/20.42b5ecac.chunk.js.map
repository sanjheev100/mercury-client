{"version":3,"file":"static/js/20.42b5ecac.chunk.js","mappings":"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","sources":["pages/admin/subCategory/SubCategoryUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  AdminNav,\r\n  CategoryCreateForm,\r\n  FormContainer,\r\n} from '../../../components'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { getCategories } from '../../../api/category'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { getSubCategory, updateSubCategory } from '../../../api/subCategory'\r\n\r\nconst SubCategoryUpdate = () => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const [name, setName] = useState('')\r\n  const [buttonloading, setButtonLoading] = useState(false)\r\n  //   const [show, setShow] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  const [parent, setParent] = useState('')\r\n\r\n  //parent category\r\n\r\n  let { slug } = useParams()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  //search while filter\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  useEffect(() => {\r\n    loadAllCategories()\r\n    loadSubCategory()\r\n  }, [])\r\n\r\n  const loadAllCategories = () => {\r\n    getCategories()\r\n      .then((res) => {\r\n        setCategories(res.data)\r\n      })\r\n      .catch((err) => {\r\n        toast.error('FETCHING CATEGORY ERROR')\r\n      })\r\n  }\r\n  const loadSubCategory = () => {\r\n    getSubCategory(slug)\r\n      .then((res) => {\r\n        setName(res.data.subCategory.name)\r\n        setParent(res.data.subCategory.parent)\r\n      })\r\n      .catch((err) => {\r\n        toast.error('FETCHING CATEGORY ERROR')\r\n      })\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!name || name.length < 2) {\r\n      return toast.error(`Name must be atleast 2 characters`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n\r\n    if (!parent) {\r\n      return toast.error(`Select the Category`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    setButtonLoading(true)\r\n    updateSubCategory(slug, { name, parent }, user.token)\r\n      .then((res) => {\r\n        setButtonLoading(false)\r\n\r\n        toast.success(`${res.data.name} is created`, {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n        navigate(-1)\r\n      })\r\n      .catch((err) => {\r\n        setButtonLoading(false)\r\n        toast.error(err, {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h4 className='text-white text-center '>Loading...</h4>\r\n      ) : (\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-2'>\r\n              <AdminNav />\r\n            </div>\r\n            <div className='col'>\r\n              <FormContainer>\r\n                <CategoryCreateForm\r\n                  submitHandler={submitHandler}\r\n                  name={name}\r\n                  setName={setName}\r\n                  buttonloading={buttonloading}\r\n                  title={'Update Sub Category'}\r\n                />\r\n\r\n                <div className='form-group mb-2'>\r\n                  <label>\r\n                    <strong className='text-white'>Select Category</strong>\r\n                  </label>\r\n                  <select\r\n                    required={true}\r\n                    name='category'\r\n                    className='form-control'\r\n                    onChange={(e) => setParent(e.target.value)}\r\n                    value={parent._id}\r\n                  >\r\n                    {categories &&\r\n                      categories.length > 0 &&\r\n                      categories?.map((c) => (\r\n                        <option\r\n                          key={c._id}\r\n                          value={c._id}\r\n                          selected={c._id === parent}\r\n                        >\r\n                          {c.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </FormContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubCategoryUpdate\r\n"],"names":["user","useSelector","state","useState","name","setName","buttonloading","setButtonLoading","loading","categories","setCategories","parent","setParent","slug","useParams","navigate","useNavigate","useEffect","loadAllCategories","loadSubCategory","getCategories","then","res","data","catch","err","toast","getSubCategory","subCategory","className","submitHandler","e","preventDefault","length","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","updateSubCategory","token","title","required","onChange","target","value","_id","map","c","selected"],"sourceRoot":""}